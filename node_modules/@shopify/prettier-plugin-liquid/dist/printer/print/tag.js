"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getNodeContent = exports.printOpeningTagEndMarker = exports.printOpeningTagStartMarker = exports.printOpeningTagPrefix = exports.printOpeningTagStart = exports.printOpeningTag = exports.needsToBorrowParentOpeningTagEndMarker = exports.needsToBorrowNextOpeningTagStartMarker = exports.needsToBorrowParentClosingTagStartMarker = exports.needsToBorrowLastChildClosingTagEndMarker = exports.needsToBorrowPrevClosingTagEndMarker = exports.printClosingTagEndMarker = exports.printClosingTagStartMarker = exports.printClosingTagSuffix = exports.printClosingTagEnd = exports.printClosingTagStart = exports.printClosingTag = void 0;
const prettier_1 = require("prettier");
const types_1 = require("../../types");
const utils_1 = require("../../printer/utils");
const { builders: { breakParent, indent, join, line, softline, hardline }, } = prettier_1.doc;
const { replaceTextEndOfLine } = prettier_1.doc.utils;
function printClosingTag(node, options) {
    return [
        (0, utils_1.hasNoCloseMarker)(node) ? '' : printClosingTagStart(node, options),
        printClosingTagEnd(node, options),
    ];
}
exports.printClosingTag = printClosingTag;
function printClosingTagStart(node, options) {
    return node.lastChild &&
        needsToBorrowParentClosingTagStartMarker(node.lastChild)
        ? ''
        : [
            printClosingTagPrefix(node, options),
            printClosingTagStartMarker(node, options),
        ];
}
exports.printClosingTagStart = printClosingTagStart;
function printClosingTagEnd(node, options) {
    return (node.next
        ? needsToBorrowPrevClosingTagEndMarker(node.next)
        : needsToBorrowLastChildClosingTagEndMarker(node.parentNode))
        ? ''
        : [
            printClosingTagEndMarker(node, options),
            printClosingTagSuffix(node, options),
        ];
}
exports.printClosingTagEnd = printClosingTagEnd;
function printClosingTagPrefix(node, options) {
    return needsToBorrowLastChildClosingTagEndMarker(node)
        ? printClosingTagEndMarker(node.lastChild, options)
        : '';
}
function printClosingTagSuffix(node, options) {
    return needsToBorrowParentClosingTagStartMarker(node)
        ? printClosingTagStartMarker(node.parentNode, options)
        : needsToBorrowNextOpeningTagStartMarker(node)
            ? printOpeningTagStartMarker(node.next)
            : '';
}
exports.printClosingTagSuffix = printClosingTagSuffix;
function printClosingTagStartMarker(node, options) {
    if (!node)
        return '';
    if (shouldNotPrintClosingTag(node, options)) {
        return '';
    }
    switch (node.type) {
        case types_1.NodeTypes.HtmlElement:
            return `</${getCompoundName(node)}`;
        case types_1.NodeTypes.HtmlRawNode:
            return `</${node.name}`;
        default:
            return '';
    }
}
exports.printClosingTagStartMarker = printClosingTagStartMarker;
function printClosingTagEndMarker(node, options) {
    if (!node)
        return '';
    if (shouldNotPrintClosingTag(node, options)) {
        return '';
    }
    switch (node.type) {
        case types_1.NodeTypes.HtmlSelfClosingElement: {
            return '/>';
        }
        default:
            return '>';
    }
}
exports.printClosingTagEndMarker = printClosingTagEndMarker;
function shouldNotPrintClosingTag(node, _options) {
    return (!(0, utils_1.hasNoCloseMarker)(node) &&
        !node.blockEndPosition &&
        ((0, utils_1.hasPrettierIgnore)(node) || (0, utils_1.shouldPreserveContent)(node.parentNode)));
}
function needsToBorrowPrevClosingTagEndMarker(node) {
    return (!(0, utils_1.isLiquidNode)(node) &&
        node.prev &&
        (0, utils_1.isHtmlNode)(node.prev) &&
        (0, utils_1.hasMeaningfulLackOfLeadingWhitespace)(node));
}
exports.needsToBorrowPrevClosingTagEndMarker = needsToBorrowPrevClosingTagEndMarker;
function needsToBorrowLastChildClosingTagEndMarker(node) {
    return ((0, utils_1.isHtmlNode)(node) &&
        node.lastChild &&
        (0, utils_1.hasMeaningfulLackOfTrailingWhitespace)(node.lastChild) &&
        (0, utils_1.isHtmlNode)((0, utils_1.getLastDescendant)(node.lastChild)) &&
        !(0, utils_1.isPreLikeNode)(node));
}
exports.needsToBorrowLastChildClosingTagEndMarker = needsToBorrowLastChildClosingTagEndMarker;
function needsToBorrowParentClosingTagStartMarker(node) {
    return ((0, utils_1.isHtmlNode)(node.parentNode) &&
        !node.next &&
        (0, utils_1.hasMeaningfulLackOfTrailingWhitespace)(node) &&
        !(0, utils_1.isLiquidNode)(node) &&
        ((0, utils_1.isTextLikeNode)((0, utils_1.getLastDescendant)(node)) ||
            (0, utils_1.isLiquidNode)((0, utils_1.getLastDescendant)(node))));
}
exports.needsToBorrowParentClosingTagStartMarker = needsToBorrowParentClosingTagStartMarker;
function needsToBorrowNextOpeningTagStartMarker(node) {
    return (node.next &&
        (0, utils_1.isHtmlNode)(node.next) &&
        (0, utils_1.isTextLikeNode)(node) &&
        (0, utils_1.hasMeaningfulLackOfTrailingWhitespace)(node));
}
exports.needsToBorrowNextOpeningTagStartMarker = needsToBorrowNextOpeningTagStartMarker;
function needsToBorrowParentOpeningTagEndMarker(node) {
    return ((0, utils_1.isHtmlNode)(node.parentNode) &&
        !node.prev &&
        (0, utils_1.hasMeaningfulLackOfLeadingWhitespace)(node) &&
        !(0, utils_1.isLiquidNode)(node));
}
exports.needsToBorrowParentOpeningTagEndMarker = needsToBorrowParentOpeningTagEndMarker;
function printAttributes(path, options, print, attrGroupId) {
    const node = path.getValue();
    if ((0, utils_1.isHtmlComment)(node))
        return '';
    if (node.attributes.length === 0) {
        return (0, utils_1.isSelfClosing)(node)
            ?
                ' '
            : '';
    }
    const prettierIgnoreAttributes = (0, utils_1.isPrettierIgnoreAttributeNode)(node.prev);
    const printedAttributes = path.map((attr) => {
        const attrNode = attr.getValue();
        let extraNewline = '';
        if (attrNode.prev &&
            (0, utils_1.hasMoreThanOneNewLineBetweenNodes)(attrNode.source, attrNode.prev, attrNode)) {
            extraNewline = hardline;
        }
        const printed = print(attr, { trailingSpaceGroupId: attrGroupId });
        return [extraNewline, printed];
    }, 'attributes');
    const forceBreakAttrContent = node.source
        .slice(node.blockStartPosition.start, (0, utils_1.last)(node.attributes).position.end)
        .includes('\n');
    const isSingleLineLinkTagException = options.singleLineLinkTags &&
        typeof node.name === 'string' &&
        node.name === 'link';
    const shouldNotBreakAttributes = (((0, utils_1.isHtmlElement)(node) && node.children.length > 0) ||
        (0, utils_1.isVoidElement)(node) ||
        (0, utils_1.isSelfClosing)(node)) &&
        !forceBreakAttrContent &&
        node.attributes.length === 1 &&
        !(0, utils_1.isLiquidNode)(node.attributes[0]);
    const forceNotToBreakAttrContent = isSingleLineLinkTagException || shouldNotBreakAttributes;
    const whitespaceBetweenAttributes = forceNotToBreakAttrContent
        ? ' '
        : options.singleAttributePerLine && node.attributes.length > 1
            ? hardline
            : line;
    const attributes = prettierIgnoreAttributes
        ? replaceTextEndOfLine(node.source.slice((0, utils_1.first)(node.attributes).position.start, (0, utils_1.last)(node.attributes).position.end))
        : join(whitespaceBetweenAttributes, printedAttributes);
    let trailingInnerWhitespace;
    if ((node.firstChild &&
        needsToBorrowParentOpeningTagEndMarker(node.firstChild)) ||
        ((0, utils_1.hasNoCloseMarker)(node) &&
            needsToBorrowLastChildClosingTagEndMarker(node.parentNode)) ||
        forceNotToBreakAttrContent) {
        trailingInnerWhitespace = (0, utils_1.isSelfClosing)(node) ? ' ' : '';
    }
    else {
        trailingInnerWhitespace = options.bracketSameLine
            ? (0, utils_1.isSelfClosing)(node)
                ? ' '
                : ''
            : (0, utils_1.isSelfClosing)(node)
                ? line
                : softline;
    }
    return [
        indent([
            forceNotToBreakAttrContent ? ' ' : line,
            forceBreakAttrContent ? breakParent : '',
            attributes,
        ]),
        trailingInnerWhitespace,
    ];
}
function printOpeningTagEnd(node) {
    return node.firstChild &&
        needsToBorrowParentOpeningTagEndMarker(node.firstChild)
        ? ''
        : printOpeningTagEndMarker(node);
}
function printOpeningTag(path, options, print, attrGroupId) {
    const node = path.getValue();
    return [
        printOpeningTagStart(node, options),
        printAttributes(path, options, print, attrGroupId),
        (0, utils_1.hasNoCloseMarker)(node) ? '' : printOpeningTagEnd(node),
    ];
}
exports.printOpeningTag = printOpeningTag;
function printOpeningTagStart(node, options) {
    return node.prev && needsToBorrowNextOpeningTagStartMarker(node.prev)
        ? ''
        : [printOpeningTagPrefix(node, options), printOpeningTagStartMarker(node)];
}
exports.printOpeningTagStart = printOpeningTagStart;
function printOpeningTagPrefix(node, options) {
    return needsToBorrowParentOpeningTagEndMarker(node)
        ? printOpeningTagEndMarker(node.parentNode)
        : needsToBorrowPrevClosingTagEndMarker(node)
            ? printClosingTagEndMarker(node.prev, options)
            : '';
}
exports.printOpeningTagPrefix = printOpeningTagPrefix;
function printOpeningTagStartMarker(node) {
    if (!node)
        return '';
    switch (node.type) {
        case types_1.NodeTypes.HtmlComment:
            return '<!--';
        case types_1.NodeTypes.HtmlElement:
        case types_1.NodeTypes.HtmlSelfClosingElement:
            return `<${getCompoundName(node)}`;
        case types_1.NodeTypes.HtmlVoidElement:
        case types_1.NodeTypes.HtmlRawNode:
            return `<${node.name}`;
        default:
            return '';
    }
}
exports.printOpeningTagStartMarker = printOpeningTagStartMarker;
function printOpeningTagEndMarker(node) {
    if (!node)
        return '';
    switch (node.type) {
        case types_1.NodeTypes.HtmlComment:
            return '-->';
        case types_1.NodeTypes.HtmlSelfClosingElement:
        case types_1.NodeTypes.HtmlVoidElement:
            return '';
        case types_1.NodeTypes.HtmlElement:
        case types_1.NodeTypes.HtmlRawNode:
            return '>';
        default:
            return '>';
    }
}
exports.printOpeningTagEndMarker = printOpeningTagEndMarker;
function getNodeContent(node, options) {
    let start = node.blockStartPosition.end;
    if (node.firstChild &&
        needsToBorrowParentOpeningTagEndMarker(node.firstChild)) {
        start -= printOpeningTagEndMarker(node).length;
    }
    let end = node.blockEndPosition.start;
    if (node.lastChild &&
        needsToBorrowParentClosingTagStartMarker(node.lastChild)) {
        end += printClosingTagStartMarker(node, options).length;
    }
    else if (node.lastChild &&
        needsToBorrowLastChildClosingTagEndMarker(node)) {
        end -= printClosingTagEndMarker(node.lastChild, options).length;
    }
    return options.originalText.slice(start, end);
}
exports.getNodeContent = getNodeContent;
function getCompoundName(node) {
    return node.name
        .map((part) => {
        if (part.type === types_1.NodeTypes.TextNode) {
            return part.value;
        }
        else if (typeof part.markup === 'string') {
            return `{{ ${part.markup.trim()} }}`;
        }
        else {
            return `{{ ${part.markup.rawSource} }}`;
        }
    })
        .join('');
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3ByaW50ZXIvcHJpbnQvdGFnLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLHVDQUE2QztBQUM3QyxtQ0FVaUI7QUFDakIsMkNBbUJ5QjtBQUV6QixNQUFNLEVBQ0osUUFBUSxFQUFFLEVBQUUsV0FBVyxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUUsR0FDbEUsR0FBRyxjQUFHLENBQUM7QUFDUixNQUFNLEVBQUUsb0JBQW9CLEVBQUUsR0FBRyxjQUFHLENBQUMsS0FBWSxDQUFDO0FBRWxELFNBQWdCLGVBQWUsQ0FDN0IsSUFBb0IsRUFDcEIsT0FBNEI7SUFFNUIsT0FBTztRQUNMLElBQUEsd0JBQWdCLEVBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsb0JBQW9CLENBQUMsSUFBSSxFQUFFLE9BQU8sQ0FBQztRQUNqRSxrQkFBa0IsQ0FBQyxJQUFJLEVBQUUsT0FBTyxDQUFDO0tBQ2xDLENBQUM7QUFDSixDQUFDO0FBUkQsMENBUUM7QUFFRCxTQUFnQixvQkFBb0IsQ0FDbEMsSUFBb0IsRUFDcEIsT0FBNEI7SUFFNUIsT0FBTyxJQUFJLENBQUMsU0FBUztRQUNuQix3Q0FBd0MsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDO1FBQ3hELENBQUMsQ0FBQyxFQUFFO1FBQ0osQ0FBQyxDQUFDO1lBQ0UscUJBQXFCLENBQUMsSUFBSSxFQUFFLE9BQU8sQ0FBQztZQUNwQywwQkFBMEIsQ0FBQyxJQUFJLEVBQUUsT0FBTyxDQUFDO1NBQzFDLENBQUM7QUFDUixDQUFDO0FBWEQsb0RBV0M7QUFFRCxTQUFnQixrQkFBa0IsQ0FDaEMsSUFBb0IsRUFDcEIsT0FBNEI7SUFFNUIsT0FBTyxDQUNMLElBQUksQ0FBQyxJQUFJO1FBQ1AsQ0FBQyxDQUFDLG9DQUFvQyxDQUFDLElBQUksQ0FB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