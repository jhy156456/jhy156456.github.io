import { AstPath, doc } from 'prettier';
import { HtmlComment, HtmlNode, HtmlSelfClosingElement, HtmlVoidElement, LiquidHtmlNode, LiquidParserOptions, LiquidPrinter } from '../../types';
export declare function printClosingTag(node: LiquidHtmlNode, options: LiquidParserOptions): (string | string[])[];
export declare function printClosingTagStart(node: LiquidHtmlNode, options: LiquidParserOptions): string[] | "";
export declare function printClosingTagEnd(node: LiquidHtmlNode, options: LiquidParserOptions): string[] | "";
export declare function printClosingTagSuffix(node: LiquidHtmlNode, options: LiquidParserOptions): string;
export declare function printClosingTagStartMarker(node: LiquidHtmlNode | undefined, options: LiquidParserOptions): string;
export declare function printClosingTagEndMarker(node: LiquidHtmlNode | undefined, options: LiquidParserOptions): "" | "/>" | ">";
export declare function needsToBorrowPrevClosingTagEndMarker(node: LiquidHtmlNode): boolean | undefined;
export declare function needsToBorrowLastChildClosingTagEndMarker(node: LiquidHtmlNode): boolean | undefined;
export declare function needsToBorrowParentClosingTagStartMarker(node: LiquidHtmlNode): boolean;
export declare function needsToBorrowNextOpeningTagStartMarker(node: LiquidHtmlNode): boolean | undefined;
export declare function needsToBorrowParentOpeningTagEndMarker(node: LiquidHtmlNode): boolean;
export declare function printOpeningTag(path: AstPath<HtmlNode>, options: LiquidParserOptions, print: LiquidPrinter, attrGroupId: symbol): (string | (string | doc.builders.Indent | doc.builders.Line)[])[];
export declare function printOpeningTagStart(node: LiquidHtmlNode, options: LiquidParserOptions): string[] | "";
export declare function printOpeningTagPrefix(node: LiquidHtmlNode, options: LiquidParserOptions): "" | "/>" | ">" | "-->";
export declare function printOpeningTagStartMarker(node: LiquidHtmlNode | undefined): string;
export declare function printOpeningTagEndMarker(node: LiquidHtmlNode | undefined): "" | ">" | "-->";
export declare function getNodeContent(node: Exclude<HtmlNode, HtmlComment | HtmlVoidElement | HtmlSelfClosingElement>, options: LiquidParserOptions): string;
